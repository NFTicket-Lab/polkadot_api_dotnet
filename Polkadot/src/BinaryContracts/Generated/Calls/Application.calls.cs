using Polkadot.BinarySerializer;

namespace Polkadot.Api
{
    public partial class Application : IApplication, IWebSocketMessageObserver
    {
        public static void RegisterGeneratedCalls(SerializerSettings settings) 
        {  
            settings
                .AddCall<Polkadot.BinaryContracts.Calls.System.FillBlockCall>("System", "fill_block")
                .AddCall<Polkadot.BinaryContracts.Calls.System.RemarkCall>("System", "remark")
                .AddCall<Polkadot.BinaryContracts.Calls.System.SetHeapPagesCall>("System", "set_heap_pages")
                .AddCall<Polkadot.BinaryContracts.Calls.System.SetCodeCall>("System", "set_code")
                .AddCall<Polkadot.BinaryContracts.Calls.System.SetCodeWithoutChecksCall>("System", "set_code_without_checks")
                .AddCall<Polkadot.BinaryContracts.Calls.System.SetChangesTrieConfigCall>("System", "set_changes_trie_config")
                .AddCall<Polkadot.BinaryContracts.Calls.System.SetStorageCall>("System", "set_storage")
                .AddCall<Polkadot.BinaryContracts.Calls.System.KillStorageCall>("System", "kill_storage")
                .AddCall<Polkadot.BinaryContracts.Calls.System.KillPrefixCall>("System", "kill_prefix")
                .AddCall<Polkadot.BinaryContracts.Calls.Contracts.UpdateScheduleCall>("Contracts", "update_schedule")
                .AddCall<Polkadot.BinaryContracts.Calls.Contracts.PutCodeCall>("Contracts", "put_code")
                .AddCall<Polkadot.BinaryContracts.Calls.Contracts.CallCall>("Contracts", "call")
                .AddCall<Polkadot.BinaryContracts.Calls.Contracts.InstantiateCall>("Contracts", "instantiate")
                .AddCall<Polkadot.BinaryContracts.Calls.Contracts.ClaimSurchargeCall>("Contracts", "claim_surcharge")
                .AddCall<Polkadot.BinaryContracts.Calls.Timestamp.SetCall>("Timestamp", "set")
                .AddCall<Polkadot.BinaryContracts.Calls.Grandpa.ReportEquivocationCall>("Grandpa", "report_equivocation")
                .AddCall<Polkadot.BinaryContracts.Calls.Grandpa.ReportEquivocationUnsignedCall>("Grandpa", "report_equivocation_unsigned")
                .AddCall<Polkadot.BinaryContracts.Calls.Grandpa.NoteStalledCall>("Grandpa", "note_stalled")
                .AddCall<Polkadot.BinaryContracts.Calls.Balances.TransferCall>("Balances", "transfer")
                .AddCall<Polkadot.BinaryContracts.Calls.Balances.SetBalanceCall>("Balances", "set_balance")
                .AddCall<Polkadot.BinaryContracts.Calls.Balances.ForceTransferCall>("Balances", "force_transfer")
                .AddCall<Polkadot.BinaryContracts.Calls.Balances.TransferKeepAliveCall>("Balances", "transfer_keep_alive")
                .AddCall<Polkadot.BinaryContracts.Calls.Sudo.SudoCall>("Sudo", "sudo")
                .AddCall<Polkadot.BinaryContracts.Calls.Sudo.SudoUncheckedWeightCall>("Sudo", "sudo_unchecked_weight")
                .AddCall<Polkadot.BinaryContracts.Calls.Sudo.SetKeyCall>("Sudo", "set_key")
                .AddCall<Polkadot.BinaryContracts.Calls.Sudo.SudoAsCall>("Sudo", "sudo_as")
                .AddCall<Polkadot.BinaryContracts.Calls.Nft.CreateCollectionCall>("Nft", "create_collection")
                .AddCall<Polkadot.BinaryContracts.Calls.Nft.DestroyCollectionCall>("Nft", "destroy_collection")
                .AddCall<Polkadot.BinaryContracts.Calls.Nft.AddToWhiteListCall>("Nft", "add_to_white_list")
                .AddCall<Polkadot.BinaryContracts.Calls.Nft.RemoveFromWhiteListCall>("Nft", "remove_from_white_list")
                .AddCall<Polkadot.BinaryContracts.Calls.Nft.SetPublicAccessModeCall>("Nft", "set_public_access_mode")
                .AddCall<Polkadot.BinaryContracts.Calls.Nft.SetMintPermissionCall>("Nft", "set_mint_permission")
                .AddCall<Polkadot.BinaryContracts.Calls.Nft.ChangeCollectionOwnerCall>("Nft", "change_collection_owner")
                .AddCall<Polkadot.BinaryContracts.Calls.Nft.AddCollectionAdminCall>("Nft", "add_collection_admin")
                .AddCall<Polkadot.BinaryContracts.Calls.Nft.RemoveCollectionAdminCall>("Nft", "remove_collection_admin")
                .AddCall<Polkadot.BinaryContracts.Calls.Nft.SetCollectionSponsorCall>("Nft", "set_collection_sponsor")
                .AddCall<Polkadot.BinaryContracts.Calls.Nft.ConfirmSponsorshipCall>("Nft", "confirm_sponsorship")
                .AddCall<Polkadot.BinaryContracts.Calls.Nft.RemoveCollectionSponsorCall>("Nft", "remove_collection_sponsor")
                .AddCall<Polkadot.BinaryContracts.Calls.Nft.CreateItemCall>("Nft", "create_item")
                .AddCall<Polkadot.BinaryContracts.Calls.Nft.CreateMultipleItemsCall>("Nft", "create_multiple_items")
                .AddCall<Polkadot.BinaryContracts.Calls.Nft.BurnItemCall>("Nft", "burn_item")
                .AddCall<Polkadot.BinaryContracts.Calls.Nft.TransferCall>("Nft", "transfer")
                .AddCall<Polkadot.BinaryContracts.Calls.Nft.ApproveCall>("Nft", "approve")
                .AddCall<Polkadot.BinaryContracts.Calls.Nft.TransferFromCall>("Nft", "transfer_from")
                .AddCall<Polkadot.BinaryContracts.Calls.Nft.SetVariableMetaDataCall>("Nft", "set_variable_meta_data")
                .AddCall<Polkadot.BinaryContracts.Calls.Nft.SetSchemaVersionCall>("Nft", "set_schema_version")
                .AddCall<Polkadot.BinaryContracts.Calls.Nft.SetOffchainSchemaCall>("Nft", "set_offchain_schema")
                .AddCall<Polkadot.BinaryContracts.Calls.Nft.SetConstOnChainSchemaCall>("Nft", "set_const_on_chain_schema")
                .AddCall<Polkadot.BinaryContracts.Calls.Nft.SetVariableOnChainSchemaCall>("Nft", "set_variable_on_chain_schema")
                .AddCall<Polkadot.BinaryContracts.Calls.Nft.SetChainLimitsCall>("Nft", "set_chain_limits")
                .AddCall<Polkadot.BinaryContracts.Calls.Nft.EnableContractSponsoringCall>("Nft", "enable_contract_sponsoring")
                .AddCall<Polkadot.BinaryContracts.Calls.Nft.SetContractSponsoringRateLimitCall>("Nft", "set_contract_sponsoring_rate_limit")
                .AddCall<Polkadot.BinaryContracts.Calls.Nft.ToggleContractWhiteListCall>("Nft", "toggle_contract_white_list")
                .AddCall<Polkadot.BinaryContracts.Calls.Nft.AddToContractWhiteListCall>("Nft", "add_to_contract_white_list")
                .AddCall<Polkadot.BinaryContracts.Calls.Nft.RemoveFromContractWhiteListCall>("Nft", "remove_from_contract_white_list")
                .AddCall<Polkadot.BinaryContracts.Calls.Nft.SetCollectionLimitsCall>("Nft", "set_collection_limits")
                .AddCall<Polkadot.BinaryContracts.Calls.Treasury.ProposeSpendCall>("Treasury", "propose_spend")
                .AddCall<Polkadot.BinaryContracts.Calls.Treasury.RejectProposalCall>("Treasury", "reject_proposal")
                .AddCall<Polkadot.BinaryContracts.Calls.Treasury.ApproveProposalCall>("Treasury", "approve_proposal")
                .AddCall<Polkadot.BinaryContracts.Calls.Vesting.VestCall>("Vesting", "vest")
                .AddCall<Polkadot.BinaryContracts.Calls.Vesting.VestOtherCall>("Vesting", "vest_other")
                .AddCall<Polkadot.BinaryContracts.Calls.Vesting.VestedTransferCall>("Vesting", "vested_transfer")
                .AddCall<Polkadot.BinaryContracts.Calls.Vesting.ForceVestedTransferCall>("Vesting", "force_vested_transfer")
;
        }
    }
}